{
    "LevelTask": {
        "level_1": "Try to get a general population of slimes",
        "level_2": "Get the maximum sample of slimes",
        "level_3": "Minimize the sample",
        "level_4": "Leave only slimes of that color whose number matches the number of features",
        "level_5": "Leave a slime with unique values of categorical features",
        "level_6": "Leave a slime with the maximum sum of quantitative features",
        "level_7": "Make the average slipperiness be 15",
        "level_8": "Make the mean and median of slipperiness equal",
        "level_9": "Make the feature \"color\" have 5 mods",
        "level_10": ""
    },
    "LevelTheory": {
        "level_1": "Hey! Let's remember what mathematical statistics is. It is a branch of mathematics that studies the results of observing mass random phenomena. For example, <important>appearance of slimes</important> is such a phenomenon. All the slimes together form a <important>general population</important>! This is the kind of totality relative to which we will draw the conclusion. Let's try to assemble it.",
        "level_2": "Instead of a general population, let's collect a <important>sample</important>. The part of the <important>general population</important> selected for study is called the <important>sample</important>.",
        "level_3": "<important>Sample size</important> is tried to maximize in order to increase its <important>representativeness</important>, that is, how it represents the <important>general population</important>. However, I give you permission to reduce a sample on the farm, but <warning>never and never do that again</warning>!",
        "level_4": "Objects have <important>features</important>. These are the results of measuring some <important>characteristic</important> of the object.",
        "level_5": "<important>Features</important> have several types. If the set of values of a feature is finite, it's a <important>categorical</important> one. The set of types of slimes is finite, so type is a categorical feature.",
        "level_6": "Another type of feature is <important>quantitative</important>. It is more common to encounter these features than <important>categorical</important> features in statistics. It accepts any value of the numeric axis.",
        "level_7": "Features have a huge number of different <important>characteristics</important>, such as the <important>sample average</important>. This is simply the arithmetic mean of the certain <important>quantitative</important> feature of the sample. Let's play around with the data to see how it changes.",
        "level_8": "Let's continue to deal with <important>characteristics</important>. If there are <important>extreme values</important>, then the <important>median</important> comes to the rescue. \n\nThe median is equal to <important>the middle of an ordered series</important> of feature values (or to the half-sum of the middle, if the sample size is even). Sometimes the median and the mean can be equal. Let's try to do that!",
        "level_9": "The last <important>measure of central tendency</important> is <important>mode</important>. This is the most frequent value of the certain feature in the sample. There can be <important>more than one</important>. Consider it on the example of one of the <important>category</important> features.",
        "level_10": ""
    },
    "LevelCompleted": {
        "level_1": "Getting the entire <important>general population</important>, of course, is simply <important>impossible</important> because it is often very large!",
        "level_2": "That's the right amount to work with! We'll figure out how much we really need later.",
        "level_3": "As a reminder, we do not yet undertake to evaluate the <important>representativeness</important> of the sample, but we will soon do so.",
        "level_4": "That's right, slimes have 4 features:\n1. color;\n2. type;\n3. sweetness;\n4. slipperiness.\nIt is important to understand that the name is not a feature. It is rather an identifier.",
        "level_5": "Right choice. There are 2 <important>categorical</important> features of slimes 2: color and type.",
        "level_6": "Right choice. There are 2 <important>quantitative</important> features of slimes 2: sweetness and slipperiness.",
        "level_7": "If a feature takes <important>extreme values</important>, that is, abnormally large or small, the average may \"shift\" in their direction and should not be used.",
        "level_8": "It is worth counting both the median and the mean to better understand how a feature works in practice.",
        "level_9": "Mode can also be counted for <important>quantitative</important> features!",
        "level_10": ""
    },
    "PythonHint": {
        "level_1": "Hello. I'm going to give you tips on <code>python</code>, how to work with statistics in it. First of all, install <code>numpy</code>. ",
        "level_2": "As a reminder, I'm going to give you tips on <code>python</code> and <code>numpy</code>. Assuming that the sample is an array, you can find out its size with the <code>size</code> attribute.",
        "level_3": "As a reminder, I'm going to give you tips on <code>python</code> and <code>numpy</code>. Assuming that the sample is an array, you can find out its size with the <code>size</code> attribute.",
        "level_4": "There is a library <code>pandas</code> that allows you to work with a tabular representation of <code>dataframe</code> data in <code>python</code>. The number of <code>dataframe</code> columns most often is equal to the number of features: <code>len(df.columns)</code>.",
        "level_5": "It is impossible to work with categorical features just like that, they must be \"encoded\", for example, through <code>label, one-hot</code> or <code>target encoder</code>.",
        "level_6": "If you call the <code>describe</code> method of <code>df</code>: <code>df.describe()</code>, then you can get a description of each quantitative feature!",
        "level_7": "Let's assume that the values of a quantitative feature are in an array. You can apply a function to it to find out the average: <code>arr.mean()</code>.",
        "level_8": "Let's assume that the values of a quantitative feature are in an array. In this case, to calculate its median, use the function: <code>np.median(arr)</code>.",
        "level_9": "Unfortunately, mode cannot be counted easily. First you need to count how many times each value occurs, and then choose the maximum: <code>val, c = np.unique(x, return_counts=True), mode = np.argwhere(c == np.max(c))</code>.",
        "level_10": ""
    },
    "TableHint": {
        "level_1": "Greetings! You can contact me to learn useful functions of <table>Excel</table> or <table>Google Sheets</table>.",
        "level_2": "As a reminder, I'll be giving you tips on <table>Excel</table> or <table>Google Sheets</table>. There is the function <table>=COUNT()</table> to count the number of elements.",
        "level_3": "As a reminder, I'll be giving you tips on <table>Excel</table> or <table>Google Sheets</table>. There is the function <table>=COUNT()</table> to count the number of elements.",
        "level_4": "Tables have no specific function, but it's simple! Columns in a table most often are features, so the number of features coincides with the number of columns.",
        "level_5": "Tables have no specific function, but everything is easy! All textual is a categorical feature.",
        "level_6": "Tables have no specific function, but everything is elementary! All numerical is a quantitative feature.",
        "level_7": "You can use the <table>=AVERAGE()</table> function to find the mean of a quantitative feature.",
        "level_8": "You can use the <table>=MEDIAN()</table> function to find the median of a quantitative feature.",
        "level_9": "You can use the <table>=MODE()</table> function to find the feature mode.",
        "level_10": ""
    },
    "ArenaTask": {
        "level_1": "t_value_1",
        "level_2": "t_value_2",
        "level_3": "t_value_3",
        "level_4": "t_value_4",
        "level_5": "t_value_5",
        "level_6": "",
        "level_7": "",
        "level_8": "",
        "level_9": "",
        "level_10": ""
    },
    "UI": {
        "empty": "error",
        "btn_play": "playground",
        "btn_battle": "arena",
        "btn_change_language": "Русский",
        "btn_exit": "exit",
        "btn_reset_progress": "reset progress",
        "hint_full": "no more slimes...",
        "hint_deactivate": "slime doesn't get through...",
        "hint_click_to_close": "click to close",
        "hint_well": "add or remove slimes",
        "hint_dyer": "color slimes",
        "hint_modifier_sweetness": "change slime's sweetness",
        "hint_modifier_slipperiness": "change slime's slipperiness",
        "slime_slipperiness": "slipperiness:",
        "slime_sweetness": "sweetness:",
        "slime_type": "type:",
        "slime_type_domestic": "domestic",
        "slime_type_wild": "wild",
        "arena_description": "<important>The Arena</important> is a place where you can test your skills. It's not a playground anymore, you can't play with data here. <warning>Now it's like in real life</warning>. There is a <important>sample</important>, you need t <important>calculate something</important>. \n\nFor each wrong answer, you will lose <warning>health</warning>. When it drops to zero, the game is over...",
        "arena_answer": "answer...",
        "python_master": "Python Master",
        "tables_master": "Tables Master",
        "grandpa": "Grandpa"
    }
}